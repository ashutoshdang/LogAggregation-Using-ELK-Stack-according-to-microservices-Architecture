<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true" scanPeriod="60 seconds">
	 <statusListener class="ch.qos.logback.core.status.NopStatusListener" />
	<conversionRule conversionWord="clr"
		converterClass="org.springframework.boot.logging.logback.ColorConverter" />
	<conversionRule conversionWord="wex"
		converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
	<conversionRule conversionWord="wEx"
		converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    
    <property name="LOG_PATH" value="C:/NameOfTheLogsDirectory/" />
	
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint}%clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx</pattern>
		</encoder>
	</appender>
	<appender name="file"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}LogsProducer.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- <maxHistory>30</maxHistory> -->
			<totalSizeCap>3GB</totalSizeCap>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
		<encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
	</appender>
	 
<!-- 	 <appender name="email" class="ch.qos.logback.classic.net.SMTPAppender"> 
		<smtpHost>smtp.gmail.com</smtpHost> <smtpPort>587</smtpPort> <STARTTLS>true</STARTTLS> 
		<username>techsupport@sdrc.co.in</username> <password>pass@123</password> 
		<to>kspmis@sdrc.co.in</to> <subject>Exception Occurred in KSP devserver</subject> 
		<layout class="ch.qos.logback.classic.html.HTMLLayout" /> <cyclicBufferTracker 
		class="ch.qos.logback.core.spi.CyclicBufferTracker"> send just one log entry 
		per email <bufferSize>1</bufferSize> </cyclicBufferTracker> </appender>  -->

  <appender name="amqp"
        class="org.springframework.amqp.rabbit.logback.AmqpAppender">
        <host>localhost</host>
        <port>5672</port>
        <virtualHost>/</virtualHost>
        <username>guest</username>
        <password>guest</password>
        <exchangeType>topic</exchangeType>
        <exchangeName>name_of_the_exchange</exchangeName>
        <applicationId>logsProducer</applicationId>
        <routingKeyPattern>logs.elk</routingKeyPattern>
        <contentType>application/json</contentType>
        <maxSenderRetries>2</maxSenderRetries>
        <charset>UTF-8</charset>
    <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
        <jsonFormatter
            class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
            <prettyPrint>true</prettyPrint>
        </jsonFormatter>
        <timestampFormat>yyyy-MM-dd' 'HH:mm:ss.SSS</timestampFormat>
    </layout>
   
    </appender>
   <!--  
   appender for sending logs directly from the application to elastic search with out using
    anything in the middle to parse and format logs like the logstash or filebeat do 
    <appender name="log2es" class="de.agilecoders.logger.log2es.logback.ElasticsearchAppender">
      <fields>MESSAGE, THREAD, LEVEL,ARGUMENTS, LOGGER, MARKER,MDC, TIMESTAMP, STACKTRACE,CALLER, SERVICE, HOSTNAME
      </fields>
      <host>http://localhost:9200</host>
      <clientType>http</clientType>
      <gzip>true</gzip>
      <hostName>localhost</hostName>
      <serviceName>logsProducer</serviceName>
      <outgoingBulkSize>5000</outgoingBulkSize>
      <flushQueueTime>1 seconds</flushQueueTime>
    </appender> -->
	<logger name="org.springframework" level="info" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="amqp" />
		
      	<appender-ref ref="file" />
	</logger>
	<logger name="org.hibernate" level="error" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="amqp" />
      <!-- 		<appender-ref ref="file" /> -->
	</logger>
	<logger name="org.mongodb" level="error" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="amqp" />
      <!-- 		<appender-ref ref="file" /> -->
	</logger>
	<logger name="org.apache" level="error" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="amqp" />
      <!-- 		<appender-ref ref="file" /> -->
	</logger>
	
	<logger name="com.asu" level="error" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="file" />
		<appender-ref ref="amqp" />
<!-- 		<appender-ref ref="amqp" /> -->
		<!-- <appender-ref ref="email" /> -->
	</logger>

	<root level="info">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="file" />
		<appender-ref ref="amqp" />
		<!-- <appender-ref ref="email" /> -->
	</root>
	

</configuration>